{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","getWeek","date","firstDayOfThisYear","Date","getFullYear","Math","ceil","getDay","rowData","dailyData","push","value","monthlyData","unshift","getMonth","weeklyData","preWeeklyData","key","oneDayData","week","hasOwnProperty","String","Object","values","timeConstant","MODE","continentName","CONTINENT_CODE","countryName","COUNTRY_CODE","resolutionMode","RESOLUTION_MODE","useState","region","setRegion","viewMode","setViewMode","resolution","setResolution","handleViewMode","mode","handleRegionChange","handleResolutionChange","className","href","id","style","border","padding","role","aria-label","type","onClick","width","height","chartType","loader","background","display","justifyContent","alignItems","data","options","chartArea","hAxis","slantedText","vAxis","legend","position","colors","rootProps","chartPackages","v","f","mapsApiKey","sizeAxis","minValue","maxValue","colorAxis","datalessRegionColor","top","color","title","titleTextStyle","fontName","fontSize","bold","italic","maxLines","textStyle","bar","groupWidth","isStacked","focusTarget","series","0","1","2","3","baselineColor","format","animation","duration","easing","displayMode","pointSize","seriesType","targetAxisIndex","4","curveType","vAxes","backgroundColor","pieSliceText","slices","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAwmCeA,MApmCf,WAAgB,IAAD,MAIPC,EAAU,SAACC,GACf,IAAMC,EAAqB,IAAIC,KAAKF,EAAKG,cAAe,EAAG,GAC3D,OAAOC,KAAKC,OAAQL,EAAOC,GAAsB,MAAYA,EAAmBK,SAAW,GAAK,IAK5FC,EAAU,CACd,CAAC,WAAe,GAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,GAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,UAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,M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","file":"static/js/main.eedf9e8a.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Chart} from \"react-google-charts\";\n\nfunction App() {\n\n  // FUNCTIONS\n  // Get week from date\n  const getWeek = (date) => {\n    const firstDayOfThisYear = new Date(date.getFullYear(), 0, 1);\n    return Math.ceil((((date - firstDayOfThisYear) / 86400000) + firstDayOfThisYear.getDay() + 1) / 7);\n  };\n  // REF: http://zerosixthree.se/snippets/get-week-of-the-year-with-jquery/\n\n  // Data from backend\n  const rowData = [\n    [1514872800000, 2],\n    [1514959200000, 1.98],\n    [1515045600000, 2.01],\n    [1515132000000, 2.01],\n    [1515391200000, 2.02],\n    [1515477600000, 2.03],\n    [1515564000000, 2.03],\n    [1515650400000, 2],\n    [1515736800000, 2.01],\n    [1515996000000, null],\n    [1516082400000, 2.03],\n    [1516168800000, 2.04],\n    [1516255200000, 2.05],\n    [1516341600000, 2.06],\n    [1516600800000, 2.06],\n    [1516687200000, 2.06],\n    [1516773600000, 2.07],\n    [1516860000000, 2.07],\n    [1516946400000, 2.09],\n    [1517205600000, 2.09],\n    [1517292000000, 2.1],\n    [1517378400000, 2.11],\n    [1517464800000, 2.11],\n    [1517551200000, 2.14],\n    [1517810400000, 2.1],\n    [1517896800000, 2.1],\n    [1517983200000, 2.1],\n    [1518069600000, 2.09],\n    [1518156000000, 2.05],\n    [1518415200000, 2.07],\n    [1518501600000, 2.05],\n    [1518588000000, 2.09],\n    [1518674400000, 2.11],\n    [1518760800000, 2.09],\n    [1519020000000, null],\n    [1519106400000, 2.1],\n    [1519192800000, 2.12],\n    [1519279200000, 2.11],\n    [1519365600000, 2.12],\n    [1519624800000, 2.13],\n    [1519711200000, 2.13],\n    [1519797600000, 2.12],\n    [1519884000000, 2.1],\n    [1519970400000, 2.12],\n    [1520229600000, 2.13],\n    [1520316000000, 2.12],\n    [1520402400000, 2.13],\n    [1520488800000, 2.11],\n    [1520575200000, 2.12],\n    [1520830800000, 2.1],\n    [1520917200000, 2.09],\n    [1521003600000, 2.07],\n    [1521090000000, 2.08],\n    [1521176400000, 2.08],\n    [1521435600000, 2.08],\n    [1521522000000, 2.08],\n    [1521608400000, 2.09],\n    [1521694800000, 2.08],\n    [1521781200000, 2.07],\n    [1522040400000, 2.08],\n    [1522126800000, 2.07],\n    [1522213200000, 2.05],\n    [1522299600000, 2.05],\n    [1522386000000, null],\n    [1522645200000, 2.05],\n    [1522731600000, 2.08],\n    [1522818000000, 2.08],\n    [1522904400000, 2.08],\n    [1522990800000, 2.07],\n    [1523250000000, 2.07],\n    [1523336400000, 2.08],\n    [1523422800000, 2.11],\n    [1523509200000, 2.13],\n    [1523595600000, 2.13],\n    [1523854800000, 2.12],\n    [1523941200000, 2.14],\n    [1524027600000, 2.16],\n    [1524114000000, 2.17],\n    [1524200400000, 2.17],\n    [1524459600000, 2.18],\n    [1524546000000, 2.17],\n    [1524632400000, 2.17],\n    [1524718800000, 2.18],\n    [1524805200000, 2.17],\n    [1525064400000, 2.17],\n    [1525150800000, 2.16],\n    [1525237200000, 2.17],\n    [1525323600000, 2.16],\n    [1525410000000, 2.16],\n    [1525669200000, 2.17],\n    [1525755600000, 2.16],\n    [1525842000000, 2.18],\n    [1525928400000, 2.17],\n    [1526014800000, 2.15],\n    [1526274000000, 2.15],\n    [1526360400000, 2.18],\n    [1526446800000, 2.17],\n    [1526533200000, 2.16],\n    [1526619600000, 2.15],\n    [1526878800000, 2.16],\n    [1526965200000, 2.15],\n    [1527051600000, 2.14],\n    [1527138000000, 2.12],\n    [1527224400000, 2.09],\n    [1527483600000, null],\n    [1527570000000, 2.04],\n    [1527656400000, 2.06],\n    [1527742800000, 2.07],\n    [1527829200000, 2.09],\n    [1528088400000, 2.12],\n    [1528174800000, 2.13],\n    [1528261200000, 2.14],\n    [1528347600000, 2.13],\n    [1528434000000, 2.11],\n    [1528693200000, 2.13],\n    [1528779600000, 2.13],\n    [1528866000000, 2.12],\n    [1528952400000, 2.12],\n    [1529038800000, 2.12],\n    [1529298000000, 2.12],\n    [1529384400000, 2.12],\n    [1529470800000, 2.12],\n    [1529557200000, 2.11],\n    [1529643600000, 2.12],\n    [1529902800000, 2.1],\n    [1529989200000, 2.12],\n    [1530075600000, 2.11],\n    [1530162000000, 2.1],\n    [1530248400000, 2.11],\n    [1530507600000, 2.14],\n    [1530594000000, 2.12],\n    [1530680400000, null],\n    [1530766800000, 2.13],\n    [1530853200000, 2.12],\n    [1531112400000, 2.13],\n    [1531198800000, 2.13],\n    [1531285200000, 2.11],\n    [1531371600000, 2.1],\n    [1531458000000, 2.11],\n    [1531717200000, 2.1],\n    [1531803600000, 2.09],\n    [1531890000000, 2.09],\n    [1531976400000, 2.09],\n    [1532062800000, 2.11],\n    [1532322000000, 2.11],\n    [1532408400000, 2.11],\n    [1532494800000, 2.13],\n    [1532581200000, 2.11],\n    [1532667600000, 2.12],\n    [1532926800000, 2.13],\n    [1533013200000, 2.12],\n    [1533099600000, 2.13],\n    [1533186000000, 2.12],\n    [1533272400000, 2.12],\n    [1533531600000, 2.11],\n    [1533618000000, 2.13],\n    [1533704400000, 2.11],\n    [1533790800000, 2.11],\n    [1533877200000, 2.09],\n    [1534136400000, 2.1],\n    [1534222800000, 2.09],\n    [1534309200000, 2.08],\n    [1534395600000, 2.08],\n    [1534482000000, 2.08],\n    [1534741200000, 2.07],\n    [1534827600000, 2.08],\n    [1534914000000, 2.08],\n    [1535000400000, 2.09],\n    [1535086800000, 2.09],\n    [1535346000000, 2.11],\n    [1535432400000, 2.11],\n    [1535518800000, 2.12],\n    [1535605200000, 2.1],\n    [1535691600000, 2.08],\n    [1535950800000, null],\n    [1536037200000, 2.1],\n    [1536123600000, 2.09],\n    [1536210000000, 2.08],\n    [1536296400000, 2.1],\n    [1536555600000, 2.1],\n    [1536642000000, 2.12],\n    [1536728400000, 2.12],\n    [1536814800000, 2.1],\n    [1536901200000, 2.1],\n    [1537160400000, 2.1],\n    [1537246800000, 2.13],\n    [1537333200000, 2.15],\n    [1537419600000, 2.15],\n    [1537506000000, 2.15],\n    [1537765200000, 2.16],\n    [1537851600000, 2.16],\n    [1537938000000, 2.14],\n    [1538024400000, 2.15],\n    [1538110800000, 2.14],\n    [1538370000000, 2.14],\n    [1538456400000, 2.12],\n    [1538542800000, 2.16],\n    [1538629200000, 2.16],\n    [1538715600000, 2.16],\n    [1538974800000, null],\n    [1539061200000, 2.17],\n    [1539147600000, 2.16],\n    [1539234000000, 2.12],\n    [1539320400000, 2.12],\n    [1539579600000, 2.13],\n    [1539666000000, 2.13],\n    [1539752400000, 2.13],\n    [1539838800000, 2.1],\n    [1539925200000, 2.11],\n    [1540184400000, 2.11],\n    [1540270800000, 2.09],\n    [1540357200000, 2.07],\n    [1540443600000, 2.05],\n    [1540530000000, 2.06],\n    [1540789200000, 2.06],\n    [1540875600000, 2.05],\n    [1540962000000, 2.05],\n    [1541048400000, 2.02],\n    [1541134800000, 2.06],\n    [1541397600000, 2.06],\n    [1541484000000, 2.07],\n    [1541570400000, 2.07],\n    [1541656800000, 2.07],\n    [1541743200000, 2.04],\n    [1542002400000, null],\n    [1542088800000, 2.02],\n    [1542175200000, 2],\n    [1542261600000, 2],\n    [1542348000000, 2.02],\n    [1542607200000, 1.99],\n    [1542693600000, 1.97],\n    [1542780000000, 1.97],\n    [1542866400000, null],\n    [1542952800000, 1.96],\n    [1543212000000, 1.96],\n    [1543298400000, 1.91],\n    [1543384800000, 1.94],\n    [1543471200000, 1.98],\n    [1543557600000, 1.97],\n    [1543816800000, 1.96],\n    [1543903200000, 1.94],\n    [1543989600000, null],\n    [1544076000000, 1.9],\n    [1544162400000, 1.89],\n    [1544421600000, 1.86],\n    [1544508000000, 1.83],\n    [1544594400000, 1.83],\n    [1544680800000, 1.83],\n    [1544767200000, 1.82],\n    [1545026400000, 1.81],\n    [1545112800000, 1.81],\n    [1545199200000, 1.8],\n    [1545285600000, 1.76],\n    [1545372000000, 1.77],\n    [1545631200000, 1.75],\n    [1545717600000, null],\n    [1545804000000, 1.77],\n    [1545890400000, 1.74],\n    [1545976800000, 1.73],\n    [1546236000000, 1.71]\n  ];\n  const countryData = [\n    ['State', 'Clicks'],\n    ['United Kingdom', 200],\n    ['France', 300],\n    ['Germany', 500],\n    ['Norway', 350],\n    ['Poland', 500],\n    ['Italy', 2000],\n    ['Spain', 250],\n    ['Czech Republic', 20],\n    // with country code and country name both shown\n    // REF: https://stackoverflow.com/questions/40747090/color-provinces-in-my-country-with-google-charts-geocharts\n    [{v: 'RU', f: 'Russia'}, 200],\n    ['China', 1000],\n    ['Japan', 2000],\n    ['South Korea', 150],\n    ['TR', 150],\n    ['India', 500],\n    ['Thailand', 300],\n    ['Indonesia', 200],\n    ['SA', 150],\n    ['Algeria', 360],\n    ['Cameroon', 300],\n    ['Egypt', 260],\n    ['Ethiopia', 190],\n    ['Gambia', 130],\n    ['Malawi', 140],\n    ['Morocco', 320],\n    ['Nigeria', 800],\n    ['South Africa', 300],\n    ['United States', 2000],\n    ['Canada', 300],\n    ['Brazil', 250],\n    ['Cuba', 400],\n    ['Argentina', 300],\n    ['Taiwan', 2000],\n    // show states of US\n    ['Illinois', 200],\n    ['Indiana', 300],\n    ['US-IA', 20],\n    ['US-RI', 150],\n    ['California', 250],\n    ['Texas', 100],\n    ['US-WA', 500],\n    ['Florida', 350],\n    // use prefecture name in Japanese\n    ['東京', 300],\n    // also can be shown in English\n    ['Osaka', 250],\n    ['Fukuoka', 150],\n    ['Okinawa', 50],\n    ['長野', 180],\n    ['北海道', 80],\n    ['Kyoto', 100],\n    // show the provinces of India perfectly\n    ['Assam', 80],\n    ['Tamil Nadu', 180],\n    ['Tripura', 150],\n    ['Nagaland', 160],\n    ['Jammu and Kashmir', 200],\n    ['Delhi', 280],\n    ['Damen and Diu', 180],\n    ['Madhya Pradesh', 280],\n    ['Riverside', 80],\n    // I don't know what the code is? 🤔\n    // REF: https://stackoverflow.com/questions/27051096/us-metro-regions-on-google-chart-geo-map\n    // REF: http://jsfiddle.net/5he4p5k9/1/\n    ['803', 200],\n    ['807', 300],\n    ['862', 400],\n    ['Bay Area', 200],\n    // show provinces of China in English\n    ['Guangdong Sheng', 250],\n    ['Beijing Shi', 500],\n    ['Hebei Sheng', 300],\n    ['Jilin Sheng', 400],\n    ['Sichuan Sheng', 500],\n    ['Shanghai Shi', 350],\n    // use prefecture name in Mandarin\n    ['新疆维吾尔自治区', 400],\n    ['西藏自治区', 450],\n    ['内蒙古自治区', 400]\n  ];\n  // TODO data\n\n  const dailyData = []; // daily data for chart\n  dailyData.push(['Date', 'Clicks(millions)']); // set title of chart\n  for (const value of rowData) {\n    dailyData.push([new Date(value[0]), value[1]])\n  }\n\n  // PRE-PROCESSING DATA\n  // Process monthly view data\n  const monthlyData = [\n    ['Jan', 0],\n    ['Feb', 0],\n    ['Mar', 0],\n    ['Apr', 0],\n    ['May', 0],\n    ['Jun', 0],\n    ['Jul', 0],\n    ['Aug', 0],\n    ['Sep', 0],\n    ['Oct', 0],\n    ['Nov', 0],\n    ['Dec', 0],\n  ]; // monthly data for chart\n  monthlyData.unshift(['Month', 'Clicks(millions)']); // set title of chart\n  for (const value of rowData) {\n    const normalizedDate = new Date(value[0]);\n    const dataMonth = normalizedDate.getMonth();\n    monthlyData[dataMonth + 1][1] += value[1];\n  }\n\n  // Process weekly view data\n  const weeklyData = []; // weekly data for chart\n  const preWeeklyData = {};\n  weeklyData.push(['Week', 'Clicks(millions)']);\n\n  // Generate new array 'preWeeklyData' with schema.\n  // Schema: preWeeklyData = { 1: [1, 0], 2: [2, 0], ... }\n  for (const key in rowData) {\n    const oneDayData = {week: getWeek(new Date(rowData[key][0])), value: rowData[key][1]};\n    // If object does not have existed key, then create new one\n    if (!preWeeklyData.hasOwnProperty(oneDayData.week))\n      preWeeklyData[String(oneDayData.week)] = [oneDayData.week, 0];\n    else\n      preWeeklyData[String(oneDayData.week)][1] += oneDayData.value;\n  }\n\n  // Convert object to array\n  for (const value of Object.values(preWeeklyData)) weeklyData.push(value);\n\n  // CONSTANTS\n  const timeConstant = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n  };\n\n  const MODE = {\n    [timeConstant.DAILY]: dailyData,\n    [timeConstant.WEEKLY]: weeklyData,\n    [timeConstant.MONTHLY]: monthlyData,\n  };\n\n  // Set continent for region\n  const continentName = {\n    WORLD: 'world',\n    EUROPE: 'europe',\n    WESTERN_EUROPE: 'western europe',\n    ASIA: 'asia',\n    EASTERN_ASIA: 'eastern asia',\n    NORTHERN_AMERICA: 'northern america',\n    US: 'US',\n    AFRICA: 'africa',\n    SOUTHERN_AMERICA: 'southern america'\n  };\n\n  const CONTINENT_CODE = {\n    [continentName.WORLD]: 'world',\n    [continentName.EUROPE]: '150',\n    [continentName.WESTERN_EUROPE]: '155',\n    [continentName.ASIA]: '142',\n    [continentName.EASTERN_ASIA]: '030',\n    [continentName.NORTHERN_AMERICA]: '021',\n    // [continentName.US]: 'US',\n    [continentName.AFRICA]: '002',\n    [continentName.SOUTHERN_AMERICA]: '005',\n  };\n\n  // Set country for region\n  const countryName = {\n    US: 'US',\n  };\n\n  const COUNTRY_CODE = {\n    [countryName.US]: 'US',\n  };\n\n  // Set resolution mode ('countries' or 'provinces')\n  const resolutionMode = {\n    COUNTRIES: 'countries',\n    PROVINCES: 'provinces'\n  };\n\n  const RESOLUTION_MODE = {\n    [resolutionMode.COUNTRIES]: 'countries',\n    [resolutionMode.PROVINCES]: 'provinces'\n  };\n\n\n  // INITIAL STATES\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [chartRange, setChartRange] = useState([new Date(2018, 0, 1),\n    new Date(2018, 11, 31)]);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [region, setRegion] = useState(continentName.WORLD);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [viewMode, setViewMode] = useState(timeConstant.DAILY);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [resolution, setResolution] = useState(resolutionMode.COUNTRIES);\n\n  // EVENT HANDLERS\n  // const handleDateRangeChange = (startDate, endDate) => setChartRange([startDate, endDate]);\n  const handleViewMode = (mode) => setViewMode(mode);\n  const handleRegionChange = (region) => setRegion(region);\n  const handleResolutionChange = (resolution) => setResolution(resolution);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n        <i className=\"devicon-react-original devIcon navbar-brand\"/>\n        <a className=\"navbar-brand\" href=\"http://google.com\">🤡 Welcome to Google Charts Playground! 👻</a>\n      </nav>\n      <div className=\"btn-group-vertical jumpBtn\">\n        <a href=\"#time\" className=\"btn btn-secondary\">Time</a>\n        <a href=\"#heatmap\" className=\"btn btn-secondary\">Heatmap</a>\n        <a href=\"#stack\" className=\"btn btn-secondary\">Stacked</a>\n        <a href=\"#taiwan\" className=\"btn btn-secondary\">Taiwan</a>\n        <a href=\"#uk\" className=\"btn btn-secondary\">UK</a>\n        <a href=\"#japan\" className=\"btn btn-secondary\">Japan</a>\n        <a href=\"#uae\" className=\"btn btn-secondary\">UAE</a>\n        <a href=\"#lebanon\" className=\"btn btn-secondary\">Lebanon</a>\n        <a href=\"#combo\" className=\"btn btn-secondary\">Combo</a>\n        <a href=\"#pie\" className=\"btn btn-secondary\">Pie</a>\n      </div>\n      {/*<p>This is a simple demo about difference types of controlling the range in chart.<br/>*/}\n      {/*  This data contains some random data from <b>Jan 1st, 2018 to Dec 31th, 2018.</b><br/>*/}\n      {/*</p>*/}\n      <h3 id=\"time\">Daily and monthly view switcher</h3>\n      {/*<p>*/}\n      {/*  If we click \"Monthly\" button it will invoke Monthly Mode. That means showing sum data for each months.<br/>*/}\n      {/*  The same feature as Daily button.<br/>*/}\n      {/*  <b>NOTE:</b>*/}\n      {/*</p>*/}\n      {/*<ul>*/}\n      {/*  <li>We chose column chart for monthly view in this demo for good readability in monthly view.</li>*/}\n      {/*  <li>Also we want to show if we don't have CONTINUOUS DATA(some days don't have CLICKS data), how the chart*/}\n      {/*    will be like.*/}\n      {/*  </li>*/}\n      {/*  <li>*/}\n      {/*    The color of line or column in chart can be changed later.*/}\n      {/*  </li>*/}\n      {/*</ul>*/}\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.MONTHLY)}>Monthly\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.WEEKLY)}>Weekly\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.DAILY)}>Daily\n          </button>\n        </div>\n        <Chart\n          className=\"chart\"\n          width='100%'\n          height='400px'\n          chartType={viewMode === timeConstant.DAILY ? 'LineChart' : 'ColumnChart'}\n          loader={<div style={{\n            width: '100%',\n            height: '400px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={MODE[viewMode]}\n          options={{\n            // Use the same chart area width as the control for axis alignment.\n            chartArea: {\n              height: '80%',\n              width: '90%',\n            },\n            hAxis: {slantedText: false},\n            vAxis: {\n              // viewWindow: {\n              //   min: 1,\n              //   max: 3,\n              // },\n            },\n            legend: {position: 'none'},\n            colors: ['#343A40'],\n          }}\n          rootProps={{'data-testid': '3'}}\n          chartPackages={['corechart', 'controls']}\n        />\n      </div>\n      {/* region */}\n      {/*<h3>Month Selector & Filter Slider</h3>*/}\n      {/*<p>*/}\n      {/*  We can look a specific month by clicking the month buttons.<br/>*/}\n      {/*  Click \"All Year\" button will show whole year(2018 in this case) data.*/}\n      {/*  Also we can drag and move the slider at the bottom to change the range we want.<br/>*/}\n      {/*  result will be shown in chart.<br/>*/}\n      {/*  If the slider is not necessary, we can still remove it.<br/>*/}\n      {/*  We just show two ways of controlling the filter.<br/>*/}\n      {/*  <b>NOTE:</b>*/}\n      {/*</p>*/}\n      {/*<ul>*/}\n      {/*  <li>*/}\n      {/*    Month buttons are just primary design, we can change to another design if necessary. (For example:*/}\n      {/*    dropdown menu)*/}\n      {/*  </li>*/}\n      {/*</ul>*/}\n      {/*<div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">*/}\n      {/*  <button type=\"button\" className=\"btn btn-secondary\"*/}\n      {/*          onClick={() => handleDateRangeChange(new Date(2018, 0, 1), new Date(2018, 0, 31))}>January*/}\n      {/*  </button>*/}\n      {/*  <button type=\"button\" className=\"btn btn-secondary\"*/}\n      {/*          onClick={() => handleDateRangeChange(new Date(2018, 1, 1), new Date(2018, 1, 28))}>February*/}\n      {/*  </button>*/}\n      {/*  <button type=\"button\" className=\"btn btn-secondary\"*/}\n      {/*          onClick={() => handleDateRangeChange(new Date(2018, 2, 1), new Date(2018, 2, 31))}>March*/}\n      {/*  </button>*/}\n      {/*  <button type=\"button\" className=\"btn btn-secondary\" disabled>...</button>*/}\n      {/*  <button type=\"button\" className=\"btn btn-secondary\" onClick={() => {*/}\n      {/*    handleDateRangeChange(new Date(2018, 0, 1), new Date(2018, 11, 31))*/}\n      {/*  }}>ALL Year*/}\n      {/*  </button>*/}\n      {/*</div>*/}\n      {/*<Chart*/}\n      {/*  className=\"chart\"*/}\n      {/*  width='100%'*/}\n      {/*  height='400px'*/}\n      {/*  chartType='LineChart'*/}\n      {/*  // style={{paddingBottom: '150px'}}*/}\n      {/*  loader={<div style={{*/}\n      {/*    width: '100%', height: '400px', background: '#cccccc', display: 'flex',*/}\n      {/*    justifyContent: 'center',*/}\n      {/*    alignItems: 'center',*/}\n      {/*  }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}*/}\n      {/*  data={dailyData}*/}\n      {/*  options={{*/}\n      {/*    // Use the same chart area width as the control for axis alignment.*/}\n      {/*    chartArea: {*/}\n      {/*      height: '80%',*/}\n      {/*      width: '90%',*/}\n      {/*    },*/}\n      {/*    hAxis: {slantedText: false},*/}\n      {/*    vAxis: {*/}\n      {/*      // viewWindow: {*/}\n      {/*      //   min: 1,*/}\n      {/*      //   max: 3,*/}\n      {/*      // },*/}\n      {/*    },*/}\n      {/*    legend: {position: 'none'},*/}\n      {/*    colors: ['#343A40'],*/}\n      {/*  }}*/}\n      {/*  rootProps={{'data-testid': '3'}}*/}\n      {/*  chartPackages={['corechart', 'controls']}*/}\n      {/*  controls={[*/}\n      {/*    {*/}\n      {/*      controlType: 'ChartRangeFilter',*/}\n      {/*      options: {*/}\n      {/*        filterColumnIndex: 0,*/}\n      {/*        ui: {*/}\n      {/*          chartType: 'LineChart',*/}\n      {/*          chartOptions: {*/}\n      {/*            chartArea: {*/}\n      {/*              width: '90%',*/}\n      {/*              height: '50%',*/}\n      {/*            },*/}\n      {/*            hAxis: {baselineColor: 'none'},*/}\n      {/*            colors: ['#343A40'],*/}\n      {/*          },*/}\n      {/*        },*/}\n      {/*      },*/}\n      {/*      controlPosition: 'bottom',*/}\n      {/*      controlWrapperParams: {*/}\n      {/*        state: {*/}\n      {/*          range: {*/}\n      {/*            start: chartRange[0],*/}\n      {/*            end: chartRange[1],*/}\n      {/*          },*/}\n      {/*        },*/}\n      {/*      },*/}\n      {/*    },*/}\n      {/*  ]}*/}\n      {/*/>*/}\n      {/*<div style={{width: '100%', height: '300px'}}/>*/}\n      {/* endregion */}\n      <h3 id=\"heatmap\">Heat map with region switcher</h3>\n      {/*<p>*/}\n      {/*  Here we demonstrate heat map.*/}\n      {/*</p>*/}\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          className=\"mapChart\"\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          data={countryData}\n          loader={<div style={{\n            width: '100%', height: '500px', background: '#cccccc', display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY\"\n          rootProps={{'data-testid': '1'}}\n          options={{\n            sizeAxis: {minValue: 0, maxValue: 100},\n            region,\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n            resolution,\n            datalessRegionColor: '#FCFCFC',\n            legend: {position: 'absolute', top: '0', color: 'green'},\n          }}\n        />\n\n        <p>Choose continent</p>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.ASIA]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Asia\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.EASTERN_ASIA]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Eastern Asia\n          </button>\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.EUROPE]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Europe\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.WESTERN_EUROPE]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Western Europe\n          </button>\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.AFRICA]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Africa\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.NORTHERN_AMERICA]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Northern America\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.SOUTHERN_AMERICA]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>Southern America\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.WORLD]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]));\n                  }}>World\n          </button>\n        </div>\n        <p>Choose country</p>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange(COUNTRY_CODE[countryName.US]);\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.PROVINCES]))\n                  }}>US\n          </button>\n          {/* TODO metro button */}\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('US-CA');\n                    handleResolutionChange('metros')\n                  }}>US-Metro\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('JP');\n                    handleResolutionChange('provinces')\n                  }}>Japan\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('IN');\n                    handleResolutionChange('provinces')\n                  }}>India\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('IT');\n                    handleResolutionChange('provinces')\n                  }}>Italy\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('CN');\n                    handleResolutionChange('provinces')\n                  }}>China\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('TW');\n                    handleResolutionChange('countries')\n                  }}>Taiwan\n          </button>\n        </div>\n      </div>\n      <h3 id=\"stack\">Stacked bar chart</h3>\n      {/* REF: https://stackoverflow.com/questions/31022421/google-visualization-stacked-bar-chart-colors-and-labels-for-each-value */}\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"BarChart\"\n          loader={<div style={{\n            width: '100%',\n            height: '500px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Country', 'Digital Display', 'Facebook', 'Instagram', 'YouTube', {role: 'annotation'}],\n            ['Sri Lanka', 280000, 190000, 290000, 300000, 'hello'],\n            ['India', 160000, 220000, 230000, 300000, 'world'],\n            ['Vietnam', 70000, 200000, 150000, 200000, 'this'],\n            ['Malaysia', 50000, 150000, 100000, 180000, 'is'],\n            ['Indonesia', 40000, 100000, 80000, 100000, 'annotation'],\n          ]}\n          options={{\n            title: 'Impressions',\n            // REF: https://stackoverflow.com/questions/37176219/how-to-change-google-chart-title-font-size\n            titleTextStyle: {\n              color: '#2c313a',\n              fontName: 'OpenSans',\n              fontSize: 36, // 12, 18 whatever you want (don't specify px)\n              bold: true,\n              italic: false,\n            },\n            legend: {position: 'bottom', maxLines: 3, textStyle: {color: '#9b9b9b', fontSize: 12}},\n            bar: {groupWidth: '75%'},\n            isStacked: true,\n            focusTarget: 'category',\n            series: {\n              0: {color: '#92bef9'},\n              1: {color: '#5e98e6'},\n              2: {color: '#3b70b7'},\n              3: {color: '#344776'},\n            },\n            hAxis: {\n              baselineColor: '#d8d8d8',\n              format: 'short',\n              title: '',\n              textStyle: {color: '#2c313a', fontSize: 16},\n            },\n            vAxis: {\n              format: 'short',\n              title: '',\n              textStyle: {color: '#2c313a', fontSize: 16},\n            },\n            animation: {\n              duration: '0.5s',\n              easing: 'inAndOut',\n              // startup: true,\n            }\n          }}\n          rootProps={{'data-testid': '1'}}\n        />\n      </div>\n      <h3 id=\"taiwan\">Data of city in Taiwan</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          loader={<div style={{\n            width: '100%',\n            height: '500px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}><i\n            className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['City', 'Clicks'],\n            ['Taipei', 2761477],\n            ['New Taipei', 2361477],\n            ['Tainan', 1324110],\n            ['Kaoshung', 959574],\n          ]}\n          options={{\n            region: 'TW',\n            displayMode: 'markers',\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n          }}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyCn1FMQWe2D2Mriyr1NlFFXMpbeQDx-m-0\"\n          rootProps={{'data-testid': '2'}}\n        />\n      </div>\n      <h3 id=\"uk\">Data of city in UK</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          loader={<div style={{\n            width: '100%', height: '500px', background: '#cccccc', display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['City', 'Clicks'],\n            ['London', 2761477],\n            ['Liverpool', 2324110],\n            ['Oxford', 2527110],\n            ['Manchester', 2354110],\n          ]}\n          options={{\n            region: 'GB',\n            displayMode: 'markers',\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n          }}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyCn1FMQWe2D2Mriyr1NlFFXMpbeQDx-m-0\"\n          rootProps={{'data-testid': '2'}}\n        />\n      </div>\n      <h3 id=\"japan\">Data of city in Japan</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          loader={<div style={{\n            width: '100%',\n            height: '500px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['City', 'Clicks'],\n            ['Osaka', 2761477],\n            ['Kobe', 2324110],\n            ['Kyoto', 2324110],\n            ['Tokyo', 1208580],\n            ['Sapporo', 58902],\n            ['Nara', 2385909],\n            ['Fukuoka', 2385909],\n          ]}\n          options={{\n            region: 'JP',\n            displayMode: 'markers',\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n          }}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyCn1FMQWe2D2Mriyr1NlFFXMpbeQDx-m-0\"\n          rootProps={{'data-testid': '2'}}\n        />\n      </div>\n      <h3 id=\"uae\">Data of city in United Arab Emirates</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          loader={<div style={{\n            width: '100%',\n            height: '500px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['City', 'Clicks'],\n            ['Dubai', 1137347],\n            ['Abu Dhabi', 603492],\n            ['Sharjah', 543733],\n            ['Al Ain', 408733],\n            ['Ajman', 226173],\n            ['Ras al-Khaimah', 115949],\n            ['Al Fujayrah', 64125],\n            ['Umm Al Quwain Fort', 44411],\n            ['Khawr Fakkan', 33575],\n            ['Dibba Al-Fujairah', 30000],\n          ]}\n          options={{\n            region: 'AE',\n            displayMode: 'markers',\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n          }}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyCn1FMQWe2D2Mriyr1NlFFXMpbeQDx-m-0\"\n          rootProps={{'data-testid': '2'}}\n        />\n      </div>\n      <h3 id=\"lebanon\">Data of city in Lebanon</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          loader={<div style={{\n            width: '100%',\n            height: '500px',\n            background: '#cccccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['City', 'Population'],\n            ['Beirut Governorate', 1916100],\n            ['Tripoli', 229398],\n            ['Sidon', 163554],\n            ['Tyre', 135204],\n            ['Nabatîyé et Tahta', 120000],\n            ['Habboûch', 98433],\n            ['Djounie', 96135],\n            ['Zahle', 78145],\n            ['Baalbek', 30196],\n            ['En Nâqoûra', 24910],\n          ]}\n          options={{\n            region: 'LB',\n            displayMode: 'markers',\n            colorAxis: {colors: ['#D1E8FF', '#248EFA']},\n          }}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyCn1FMQWe2D2Mriyr1NlFFXMpbeQDx-m-0\"\n          rootProps={{'data-testid': '2'}}\n        />\n      </div>\n      <h3 id=\"combo\">Combo chart with line and bar</h3>\n      {/* REF: https://stackoverflow.com/questions/29931681/google-combo-charts-with-stacked-bar-and-lines */}\n      <div style={{\n        alignItems: 'center',\n        border: '1px solid #b9b9b9',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '5px',\n      }}>\n        <Chart\n          width={'100%'}\n          height={'325px'}\n          chartType=\"ComboChart\"\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '325px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Month', 'Digital Display', 'Facebook', 'Instagram', 'YouTube', 'Engagement Rate'],\n            ['Aug 26', 165, 938, 614.6, 400, 0.04],\n            ['Sep 2', 135, 1120, 682, 500, 0.05],\n            ['Sep 9', 157, 1167, 623, 600, 0.045],\n            ['Sep 16', 139, 1110, 609.4, 450, 0.035],\n            ['Sep 23', 136, 691, 569.6, 700, 0.03],\n            ['Sep 30', 236, 491, 469.6, 500, 0.02],\n            ['Oct 7', 436, 591, 369.6, 700, 0.015],\n            ['Oct 14', 336, 791, 269.6, 800, 0.025],\n            ['Oct 21', 236, 391, 469.6, 750, 0.02],\n            ['Oct 28', 336, 291, 369.6, 600, 0.015],\n          ]}\n          options={{\n            bar: {groupWidth: '50%'},\n            chartArea: {width: '85%', height: '75%'},\n            focusTarget: 'category',\n            hAxis: {title: ''},\n            vAxis: {baselineColor: '#d8d8d8', fontSize: 16},\n            isStacked: true,\n            legend: {position: 'bottom', textStyle: {color: '#9b9b9b'}},\n            title: '',\n            pointSize: 10,\n            seriesType: 'bars',\n            series: {\n              0: {targetAxisIndex: 0, color: '#92bef9'},\n              1: {targetAxisIndex: 0, color: '#5e98e6'},\n              2: {targetAxisIndex: 0, color: '#3b70b7'},\n              3: {targetAxisIndex: 0, color: '#344776'},\n              4: {targetAxisIndex: 1, color: '#f7cc6d', type: 'line', curveType: 'function'},\n            },\n            vAxes: {\n              0: {title: '', format: 'short'},\n              1: {title: '', format: 'percent'},\n            },\n          }}\n          rootProps={{'data-testid': '1'}}\n        />\n      </div>\n      <h3 id=\"pie\">Demo for Pie Chart</h3>\n      <div style={{border: '1px solid #b9b9b9', padding: '5px'}}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"PieChart\"\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '500px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Platform', 'Total Clicks', {role: 'annotation'}],\n            ['PFX', 54500, 'hello'],\n            ['Facebook', 45500, 'moto'],\n          ]}\n          options={{\n            // title: 'CTR To Website',\n            backgroundColor: '#dddddd',\n            chartArea: {\n              height: '90%',\n              width: '90%',\n            },\n            legend: 'none',\n            pieSliceText: 'label',\n            slices: {\n              0: {color: '#51a4f8'},\n              1: {color: '#f7cc6d'},\n            },\n            // tooltip: { trigger: 'none' },\n\n          }}\n          rootProps={{'data-testid': '1'}}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}