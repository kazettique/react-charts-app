{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","getWeek","date","firstDayOfThisYear","Date","getFullYear","Math","ceil","getDay","countryData","v","f","countryData2","newRowData","value","push","dailyData","monthlyData","unshift","dataMonth","getMonth","weeklyData","preWeeklyData","key","oneDayData","week","value1","value2","value3","hasOwnProperty","String","Object","values","timeConstant","MODE","continentName","CONTINENT_CODE","countryName","COUNTRY_CODE","resolutionMode","RESOLUTION_MODE","useState","region","setRegion","viewMode","setViewMode","resolution","setResolution","is3dMode","set3dMode","mapData","setMapData","handleViewMode","mode","handleRegionChange","handleResolutionChange","handle3dModeChange","handleMapDataChange","className","href","role","aria-label","id","style","border","padding","type","onClick","width","height","chartType","loader","alignItems","background","display","justifyContent","data","options","chartArea","colors","hAxis","slantedText","legend","position","pointSize","vAxis","rootProps","chartPackages","mapsApiKey","colorAxis","datalessRegionColor","top","color","sizeAxis","minValue","maxValue","title","titleTextStyle","bold","fontName","fontSize","italic","maxLines","textStyle","bar","groupWidth","isStacked","focusTarget","series","0","1","2","3","baselineColor","format","animation","duration","easing","seriesType","targetAxisIndex","4","curveType","vAxes","pieSliceText","slices","tooltip","trigger","is3D","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,UAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,KAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,SAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,UAAe,MAChB,CAAC,WAAe,MAChB,CAAC,WAAe,MAChB,CAAC,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","file":"static/js/main.02655cda.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport { Chart } from 'react-google-charts'\n\nfunction App() {\n  // FUNCTIONS\n  // Get week from date\n  const getWeek = (date) => {\n    const firstDayOfThisYear = new Date(date.getFullYear(), 0, 1)\n    return Math.ceil((((date - firstDayOfThisYear) / 86400000) + firstDayOfThisYear.getDay() + 1) / 7)\n  }\n  // REF: http://zerosixthree.se/snippets/get-week-of-the-year-with-jquery/\n\n  // Data from backend\n  const rowData = [\n    [1514872800000, 2],\n    [1514959200000, 1.98],\n    [1515045600000, 2.01],\n    [1515132000000, 2.01],\n    [1515391200000, 2.02],\n    [1515477600000, 2.03],\n    [1515564000000, 2.03],\n    [1515650400000, 2],\n    [1515736800000, 2.01],\n    [1515996000000, null],\n    [1516082400000, 2.03],\n    [1516168800000, 2.04],\n    [1516255200000, 2.05],\n    [1516341600000, 2.06],\n    [1516600800000, 2.06],\n    [1516687200000, 2.06],\n    [1516773600000, 2.07],\n    [1516860000000, 2.07],\n    [1516946400000, 2.09],\n    [1517205600000, 2.09],\n    [1517292000000, 2.1],\n    [1517378400000, 2.11],\n    [1517464800000, 2.11],\n    [1517551200000, 2.14],\n    [1517810400000, 2.1],\n    [1517896800000, 2.1],\n    [1517983200000, 2.1],\n    [1518069600000, 2.09],\n    [1518156000000, 2.05],\n    [1518415200000, 2.07],\n    [1518501600000, 2.05],\n    [1518588000000, 2.09],\n    [1518674400000, 2.11],\n    [1518760800000, 2.09],\n    [1519020000000, null],\n    [1519106400000, 2.1],\n    [1519192800000, 2.12],\n    [1519279200000, 2.11],\n    [1519365600000, 2.12],\n    [1519624800000, 2.13],\n    [1519711200000, 2.13],\n    [1519797600000, 2.12],\n    [1519884000000, 2.1],\n    [1519970400000, 2.12],\n    [1520229600000, 2.13],\n    [1520316000000, 2.12],\n    [1520402400000, 2.13],\n    [1520488800000, 2.11],\n    [1520575200000, 2.12],\n    [1520830800000, 2.1],\n    [1520917200000, 2.09],\n    [1521003600000, 2.07],\n    [1521090000000, 2.08],\n    [1521176400000, 2.08],\n    [1521435600000, 2.08],\n    [1521522000000, 2.08],\n    [1521608400000, 2.09],\n    [1521694800000, 2.08],\n    [1521781200000, 2.07],\n    [1522040400000, 2.08],\n    [1522126800000, 2.07],\n    [1522213200000, 2.05],\n    [1522299600000, 2.05],\n    [1522386000000, null],\n    [1522645200000, 2.05],\n    [1522731600000, 2.08],\n    [1522818000000, 2.08],\n    [1522904400000, 2.08],\n    [1522990800000, 2.07],\n    [1523250000000, 2.07],\n    [1523336400000, 2.08],\n    [1523422800000, 2.11],\n    [1523509200000, 2.13],\n    [1523595600000, 2.13],\n    [1523854800000, 2.12],\n    [1523941200000, 2.14],\n    [1524027600000, 2.16],\n    [1524114000000, 2.17],\n    [1524200400000, 2.17],\n    [1524459600000, 2.18],\n    [1524546000000, 2.17],\n    [1524632400000, 2.17],\n    [1524718800000, 2.18],\n    [1524805200000, 2.17],\n    [1525064400000, 2.17],\n    [1525150800000, 2.16],\n    [1525237200000, 2.17],\n    [1525323600000, 2.16],\n    [1525410000000, 2.16],\n    [1525669200000, 2.17],\n    [1525755600000, 2.16],\n    [1525842000000, 2.18],\n    [1525928400000, 2.17],\n    [1526014800000, 2.15],\n    [1526274000000, 2.15],\n    [1526360400000, 2.18],\n    [1526446800000, 2.17],\n    [1526533200000, 2.16],\n    [1526619600000, 2.15],\n    [1526878800000, 2.16],\n    [1526965200000, 2.15],\n    [1527051600000, 2.14],\n    [1527138000000, 2.12],\n    [1527224400000, 2.09],\n    [1527483600000, null],\n    [1527570000000, 2.04],\n    [1527656400000, 2.06],\n    [1527742800000, 2.07],\n    [1527829200000, 2.09],\n    [1528088400000, 2.12],\n    [1528174800000, 2.13],\n    [1528261200000, 2.14],\n    [1528347600000, 2.13],\n    [1528434000000, 2.11],\n    [1528693200000, 2.13],\n    [1528779600000, 2.13],\n    [1528866000000, 2.12],\n    [1528952400000, 2.12],\n    [1529038800000, 2.12],\n    [1529298000000, 2.12],\n    [1529384400000, 2.12],\n    [1529470800000, 2.12],\n    [1529557200000, 2.11],\n    [1529643600000, 2.12],\n    [1529902800000, 2.1],\n    [1529989200000, 2.12],\n    [1530075600000, 2.11],\n    [1530162000000, 2.1],\n    [1530248400000, 2.11],\n    [1530507600000, 2.14],\n    [1530594000000, 2.12],\n    [1530680400000, null],\n    [1530766800000, 2.13],\n    [1530853200000, 2.12],\n    [1531112400000, 2.13],\n    [1531198800000, 2.13],\n    [1531285200000, 2.11],\n    [1531371600000, 2.1],\n    [1531458000000, 2.11],\n    [1531717200000, 2.1],\n    [1531803600000, 2.09],\n    [1531890000000, 2.09],\n    [1531976400000, 2.09],\n    [1532062800000, 2.11],\n    [1532322000000, 2.11],\n    [1532408400000, 2.11],\n    [1532494800000, 2.13],\n    [1532581200000, 2.11],\n    [1532667600000, 2.12],\n    [1532926800000, 2.13],\n    [1533013200000, 2.12],\n    [1533099600000, 2.13],\n    [1533186000000, 2.12],\n    [1533272400000, 2.12],\n    [1533531600000, 2.11],\n    [1533618000000, 2.13],\n    [1533704400000, 2.11],\n    [1533790800000, 2.11],\n    [1533877200000, 2.09],\n    [1534136400000, 2.1],\n    [1534222800000, 2.09],\n    [1534309200000, 2.08],\n    [1534395600000, 2.08],\n    [1534482000000, 2.08],\n    [1534741200000, 2.07],\n    [1534827600000, 2.08],\n    [1534914000000, 2.08],\n    [1535000400000, 2.09],\n    [1535086800000, 2.09],\n    [1535346000000, 2.11],\n    [1535432400000, 2.11],\n    [1535518800000, 2.12],\n    [1535605200000, 2.1],\n    [1535691600000, 2.08],\n    [1535950800000, null],\n    [1536037200000, 2.1],\n    [1536123600000, 2.09],\n    [1536210000000, 2.08],\n    [1536296400000, 2.1],\n    [1536555600000, 2.1],\n    [1536642000000, 2.12],\n    [1536728400000, 2.12],\n    [1536814800000, 2.1],\n    [1536901200000, 2.1],\n    [1537160400000, 2.1],\n    [1537246800000, 2.13],\n    [1537333200000, 2.15],\n    [1537419600000, 2.15],\n    [1537506000000, 2.15],\n    [1537765200000, 2.16],\n    [1537851600000, 2.16],\n    [1537938000000, 2.14],\n    [1538024400000, 2.15],\n    [1538110800000, 2.14],\n    [1538370000000, 2.14],\n    [1538456400000, 2.12],\n    [1538542800000, 2.16],\n    [1538629200000, 2.16],\n    [1538715600000, 2.16],\n    [1538974800000, null],\n    [1539061200000, 2.17],\n    [1539147600000, 2.16],\n    [1539234000000, 2.12],\n    [1539320400000, 2.12],\n    [1539579600000, 2.13],\n    [1539666000000, 2.13],\n    [1539752400000, 2.13],\n    [1539838800000, 2.1],\n    [1539925200000, 2.11],\n    [1540184400000, 2.11],\n    [1540270800000, 2.09],\n    [1540357200000, 2.07],\n    [1540443600000, 2.05],\n    [1540530000000, 2.06],\n    [1540789200000, 2.06],\n    [1540875600000, 2.05],\n    [1540962000000, 2.05],\n    [1541048400000, 2.02],\n    [1541134800000, 2.06],\n    [1541397600000, 2.06],\n    [1541484000000, 2.07],\n    [1541570400000, 2.07],\n    [1541656800000, 2.07],\n    [1541743200000, 2.04],\n    [1542002400000, null],\n    [1542088800000, 2.02],\n    [1542175200000, 2],\n    [1542261600000, 2],\n    [1542348000000, 2.02],\n    [1542607200000, 1.99],\n    [1542693600000, 1.97],\n    [1542780000000, 1.97],\n    [1542866400000, null],\n    [1542952800000, 1.96],\n    [1543212000000, 1.96],\n    [1543298400000, 1.91],\n    [1543384800000, 1.94],\n    [1543471200000, 1.98],\n    [1543557600000, 1.97],\n    [1543816800000, 1.96],\n    [1543903200000, 1.94],\n    [1543989600000, null],\n    [1544076000000, 1.9],\n    [1544162400000, 1.89],\n    [1544421600000, 1.86],\n    [1544508000000, 1.83],\n    [1544594400000, 1.83],\n    [1544680800000, 1.83],\n    [1544767200000, 1.82],\n    [1545026400000, 1.81],\n    [1545112800000, 1.81],\n    [1545199200000, 1.8],\n    [1545285600000, 1.76],\n    [1545372000000, 1.77],\n    [1545631200000, 1.75],\n    [1545717600000, null],\n    [1545804000000, 1.77],\n    [1545890400000, 1.74],\n    [1545976800000, 1.73],\n    [1546236000000, 1.71],\n  ]\n  const countryData = [\n    ['State', 'Clicks'],\n    ['United Kingdom', 200],\n    ['France', 300],\n    ['Germany', 500],\n    ['Norway', 350],\n    ['Poland', 500],\n    ['Italy', 2000],\n    ['Spain', 250],\n    ['Czech Republic', 20],\n    // with country code and country name both shown\n    // REF: https://stackoverflow.com/questions/40747090/color-provinces-in-my-country-with-google-charts-geocharts\n    [{ v: 'RU', f: 'Russia' }, 200],\n    ['China', 1000],\n    ['Japan', 2000],\n    ['South Korea', 150],\n    ['TR', 150],\n    ['India', 500],\n    ['Thailand', 300],\n    ['Indonesia', 200],\n    ['SA', 150],\n    ['Algeria', 360],\n    ['Cameroon', 300],\n    ['Egypt', 260],\n    ['Ethiopia', 190],\n    ['Gambia', 130],\n    ['Malawi', 140],\n    ['Morocco', 320],\n    ['Nigeria', 800],\n    ['South Africa', 300],\n    ['United States', 2000],\n    ['Canada', 300],\n    ['Brazil', 250],\n    ['Cuba', 400],\n    ['Argentina', 300],\n    ['Taiwan', 2000],\n    // show states of US\n    ['Illinois', 200],\n    ['Indiana', 300],\n    ['US-IA', 20],\n    ['US-RI', 150],\n    ['California', 250],\n    ['Texas', 100],\n    ['US-WA', 500],\n    ['Florida', 350],\n    // use prefecture name in Japanese\n    ['東京', 300],\n    // also can be shown in English\n    ['Osaka', 250],\n    ['Fukuoka', 150],\n    ['Okinawa', 50],\n    ['長野', 180],\n    ['北海道', 80],\n    ['Kyoto', 100],\n    // show the provinces of India perfectly\n    ['Assam', 80],\n    ['Tamil Nadu', 180],\n    ['Tripura', 150],\n    ['Nagaland', 160],\n    ['Jammu and Kashmir', 200],\n    ['Delhi', 280],\n    ['Damen and Diu', 180],\n    ['Madhya Pradesh', 280],\n    ['Riverside', 80],\n    // I don't know what the code is? 🤔\n    // REF: https://stackoverflow.com/questions/27051096/us-metro-regions-on-google-chart-geo-map\n    // REF: http://jsfiddle.net/5he4p5k9/1/\n    ['803', 200],\n    ['807', 300],\n    ['862', 400],\n    ['Bay Area', 200],\n    // show provinces of China in English\n    ['Guangdong Sheng', 250],\n    ['Beijing Shi', 500],\n    ['Hebei Sheng', 300],\n    ['Jilin Sheng', 400],\n    ['Sichuan Sheng', 500],\n    ['Shanghai Shi', 350],\n    // use prefecture name in Mandarin\n    ['新疆维吾尔自治区', 400],\n    ['西藏自治区', 450],\n    ['内蒙古自治区', 400],\n  ]\n  const countryData2 = [\n    ['State', 'Clicks'],\n    ['United Kingdom', 100],\n    ['France', 400],\n    ['Germany', 300],\n    ['Norway', 250],\n    ['Poland', 400],\n    ['Italy', 200],\n    ['Spain', 150],\n    ['Czech Republic', 120],\n    // with country code and country name both shown\n    // REF: https://stackoverflow.com/questions/40747090/color-provinces-in-my-country-with-google-charts-geocharts\n    [{ v: 'RU', f: 'Russia' }, 1200],\n    ['China', 3000],\n    ['Japan', 4000],\n    ['South Korea', 2150],\n    ['TR', 2150],\n    ['India', 2500],\n    ['Thailand', 2300],\n    ['Indonesia', 2200],\n    ['SA', 1250],\n    ['Algeria', 1360],\n    ['Cameroon', 1300],\n    ['Egypt', 1260],\n    ['Ethiopia', 2190],\n    ['Gambia', 1130],\n    ['Malawi', 2140],\n    ['Morocco', 2320],\n    ['Nigeria', 2800],\n    ['South Africa', 2300],\n    ['United States', 2200],\n    ['Canada', 200],\n    ['Brazil', 2350],\n    ['Cuba', 2400],\n    ['Argentina', 1300],\n    ['Taiwan', 2100],\n    // show states of US\n    ['Illinois', 1200],\n    ['Indiana', 1300],\n    ['US-IA', 2000],\n    ['US-RI', 1500],\n    ['California', 1250],\n    ['Texas', 1001],\n    ['US-WA', 2500],\n    ['Florida', 2350],\n    // use prefecture name in Japanese\n    ['東京', 1300],\n    // also can be shown in English\n    ['Osaka', 1250],\n    ['Fukuoka', 2150],\n    ['Okinawa', 1150],\n    ['長野', 1180],\n    ['北海道', 1180],\n    ['Kyoto', 1100],\n    // show the provinces of India perfectly\n    ['Assam', 1180],\n    ['Tamil Nadu', 1180],\n    ['Tripura', 1250],\n    ['Nagaland', 1160],\n    ['Jammu and Kashmir', 1200],\n    ['Delhi', 1280],\n    ['Damen and Diu', 2180],\n    ['Madhya Pradesh', 1280],\n    ['Riverside', 1280],\n    // I don't know what the code is? 🤔\n    // REF: https://stackoverflow.com/questions/27051096/us-metro-regions-on-google-chart-geo-map\n    // REF: http://jsfiddle.net/5he4p5k9/1/\n    ['803', 200],\n    ['807', 300],\n    ['862', 400],\n    ['Bay Area', 200],\n    // show provinces of China in English\n    ['Guangdong Sheng', 2250],\n    ['Beijing Shi', 1500],\n    ['Hebei Sheng', 1300],\n    ['Jilin Sheng', 1400],\n    ['Sichuan Sheng', 1500],\n    ['Shanghai Shi', 1350],\n    // use prefecture name in Mandarin\n    ['新疆维吾尔自治区', 1400],\n    ['西藏自治区', 1450],\n    ['内蒙古自治区', 1400],\n  ]\n  const newRowData = []\n  for (const value of rowData) newRowData.push([value[0], value[1], value[1] == null ? null : value[1] * 1.2, value[1] == null ? null : value[1] * 0.8])\n\n  const dailyData = [] // daily data for chart\n  dailyData.push(['Date', 'Impressions', 'Reach', 'Clicks']) // set title of chart\n  for (const value of newRowData) dailyData.push([new Date(value[0]), value[1], value[2], value[3]])\n\n  // PRE-PROCESSING DATA\n  // Process monthly view data\n  const monthlyData = [\n    ['Jan', 0, 0, 0],\n    ['Feb', 0, 0, 0],\n    ['Mar', 0, 0, 0],\n    ['Apr', 0, 0, 0],\n    ['May', 0, 0, 0],\n    ['Jun', 0, 0, 0],\n    ['Jul', 0, 0, 0],\n    ['Aug', 0, 0, 0],\n    ['Sep', 0, 0, 0],\n    ['Oct', 0, 0, 0],\n    ['Nov', 0, 0, 0],\n    ['Dec', 0, 0, 0],\n  ] // monthly data for chart\n  monthlyData.unshift(['Month', 'Impressions', 'Reach', 'Clicks']) // set title of chart\n  for (const value of newRowData) {\n    const normalizedDate = new Date(value[0])\n    const dataMonth = normalizedDate.getMonth()\n    monthlyData[dataMonth + 1][1] += value[1]\n    monthlyData[dataMonth + 1][2] += value[2]\n    monthlyData[dataMonth + 1][3] += value[3]\n  }\n\n  // Process weekly view data\n  const weeklyData = [] // weekly data for chart\n  const preWeeklyData = {}\n  weeklyData.push(['Week', 'Impressions', 'Reach', 'Clicks'])\n\n  // Generate new array 'preWeeklyData' with schema.\n  // Schema: preWeeklyData = { 1: [1, 0], 2: [2, 0], ... }\n  for (const key in newRowData) {\n    const oneDayData = {\n      week: getWeek(new Date(newRowData[key][0])),\n      value1: newRowData[key][1],\n      value2: newRowData[key][2],\n      value3: newRowData[key][3],\n    }\n    // If object does not have existed key, then create new one\n    if (!preWeeklyData.hasOwnProperty(oneDayData.week))\n      preWeeklyData[String(oneDayData.week)] = [oneDayData.week, 0, 0, 0]\n    else {\n      preWeeklyData[String(oneDayData.week)][1] += oneDayData.value1\n      preWeeklyData[String(oneDayData.week)][2] += oneDayData.value2\n      preWeeklyData[String(oneDayData.week)][3] += oneDayData.value3\n    }\n  }\n\n  // Convert object to array\n  for (const value of Object.values(preWeeklyData)) weeklyData.push(value)\n\n  // CONSTANTS\n  const timeConstant = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n  }\n\n  const MODE = {\n    [timeConstant.DAILY]: dailyData,\n    [timeConstant.WEEKLY]: weeklyData,\n    [timeConstant.MONTHLY]: monthlyData,\n  }\n\n  // Set continent for region\n  const continentName = {\n    WORLD: 'world',\n    EUROPE: 'europe',\n    WESTERN_EUROPE: 'western europe',\n    ASIA: 'asia',\n    EASTERN_ASIA: 'eastern asia',\n    NORTHERN_AMERICA: 'northern america',\n    US: 'US',\n    AFRICA: 'africa',\n    SOUTHERN_AMERICA: 'southern america',\n  }\n\n  const CONTINENT_CODE = {\n    [continentName.WORLD]: 'world',\n    [continentName.EUROPE]: '150',\n    [continentName.WESTERN_EUROPE]: '155',\n    [continentName.ASIA]: '142',\n    [continentName.EASTERN_ASIA]: '030',\n    [continentName.NORTHERN_AMERICA]: '021',\n    // [continentName.US]: 'US',\n    [continentName.AFRICA]: '002',\n    [continentName.SOUTHERN_AMERICA]: '005',\n  }\n\n  // Set country for region\n  const countryName = {\n    US: 'US',\n  }\n\n  const COUNTRY_CODE = {\n    [countryName.US]: 'US',\n  }\n\n  // Set resolution mode ('countries' or 'provinces')\n  const resolutionMode = {\n    COUNTRIES: 'countries',\n    PROVINCES: 'provinces',\n  }\n\n  const RESOLUTION_MODE = {\n    [resolutionMode.COUNTRIES]: 'countries',\n    [resolutionMode.PROVINCES]: 'provinces',\n  }\n\n  // INITIAL STATES\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [region, setRegion] = useState(continentName.WORLD)\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [viewMode, setViewMode] = useState(timeConstant.DAILY)\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [resolution, setResolution] = useState(resolutionMode.COUNTRIES)\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [is3dMode, set3dMode] = useState(false)\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [mapData, setMapData] = useState(countryData)\n\n  // EVENT HANDLERS\n  // const handleDateRangeChange = (startDate, endDate) => setChartRange([startDate, endDate]);\n  const handleViewMode = (mode) => setViewMode(mode)\n  const handleRegionChange = (region) => setRegion(region)\n  const handleResolutionChange = (resolution) => setResolution(resolution)\n  const handle3dModeChange = (is3dMode) => set3dMode(is3dMode)\n  const handleMapDataChange = (mapData) => setMapData(mapData)\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n        <i className=\"devicon-react-original devIcon navbar-brand\"/>\n        <a className=\"navbar-brand\" href=\"http://google.com\"><span role=\"img\" aria-label=\"\">🤡</span> Welcome to Google\n          Charts\n          Playground! <span role=\"img\" aria-label=\"\">👻</span></a>\n      </nav>\n      <div className=\"btn-group-vertical jumpBtn\">\n        <a href=\"#time\" className=\"btn btn-secondary\">Time</a>\n        <a href=\"#heatmap\" className=\"btn btn-secondary\">Heatmap</a>\n        <a href=\"#stack\" className=\"btn btn-secondary\">Stacked</a>\n        <a href=\"#combo\" className=\"btn btn-secondary\">Combo</a>\n        <a href=\"#pie\" className=\"btn btn-secondary\">Pie</a>\n      </div>\n      <h3 id=\"time\">Daily and monthly view switcher</h3>\n      <div style={{ border: '1px solid #b9b9b9', padding: '5px' }}>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.MONTHLY)}>Month\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.WEEKLY)}>Week\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => handleViewMode(timeConstant.DAILY)}>Day\n          </button>\n        </div>\n        <Chart\n          className=\"chart\"\n          width='100%'\n          height='400px'\n          chartType={viewMode === timeConstant.DAILY ? 'LineChart' : 'LineChart'}\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '400px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={MODE[viewMode]}\n          options={{\n            // Use the same chart area width as the control for axis alignment.\n            chartArea: {\n              height: '75%',\n              width: '80%',\n            },\n            colors: ['#51a4f8', '#f7cc6d', '#76d7d7'],\n            hAxis: { slantedText: false },\n            legend: { position: 'bottom' },\n            pointSize: 4,\n            vAxis: {},\n          }}\n          rootProps={{ 'data-testid': '3' }}\n          chartPackages={['corechart', 'controls']}\n        />\n      </div>\n      <h3 id=\"heatmap\">Heat map with region switcher</h3>\n      <div style={{ border: '1px solid #b9b9b9', padding: '5px' }}>\n        <Chart\n          className=\"mapChart\"\n          width={'100%'}\n          height={'500px'}\n          chartType=\"GeoChart\"\n          data={mapData}\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '500px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          // Note: you will need to get a mapsApiKey for your project.\n          // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n          mapsApiKey=\"AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY\"\n          rootProps={{ 'data-testid': '1' }}\n          options={{\n            colorAxis: { colors: ['#D1E8FF', '#248EFA'] },\n            datalessRegionColor: '#FCFCFC',\n            legend: { position: 'absolute', top: '0', color: 'green' },\n            region,\n            resolution,\n            sizeAxis: { minValue: 0, maxValue: 100 },\n          }}\n        />\n\n        <p>Choose continent</p>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.ASIA])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Asia\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.EASTERN_ASIA])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Eastern Asia\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange('035')\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}> SE Asia\n          </button>\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.EUROPE])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Europe\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.WESTERN_EUROPE])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Western Europe\n          </button>\n          <button type=\"button\" className=\"btn btn-success\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.AFRICA])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Africa\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.NORTHERN_AMERICA])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Northern America\n          </button>\n          <button type=\"button\" className=\"btn btn-warning\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.SOUTHERN_AMERICA])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>Southern America\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\"\n                  onClick={() => {\n                    handleRegionChange(CONTINENT_CODE[continentName.WORLD])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.COUNTRIES]))\n                  }}>World\n          </button>\n        </div>\n        <p>Choose country</p>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange(COUNTRY_CODE[countryName.US])\n                    handleResolutionChange((RESOLUTION_MODE[resolutionMode.PROVINCES]))\n                  }}>US\n          </button>\n          {/* TODO metro button */}\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('US-CA')\n                    handleResolutionChange('metros')\n                  }}>US-Metro\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('JP')\n                    handleResolutionChange('provinces')\n                  }}>Japan\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('IN')\n                    handleResolutionChange('provinces')\n                  }}>India\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('IT')\n                    handleResolutionChange('provinces')\n                  }}>Italy\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('CN')\n                    handleResolutionChange('provinces')\n                  }}>China\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => {\n                    handleRegionChange('TW')\n                    handleResolutionChange('countries')\n                  }}>Taiwan\n          </button>\n        </div>\n        <p>Choose Data</p>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => handleMapDataChange(countryData)}>Data 1\n          </button>\n          <button type=\"button\" className=\"btn btn-danger\"\n                  onClick={() => handleMapDataChange(countryData2)}>Data 2\n          </button>\n        </div>\n      </div>\n      <h3 id=\"stack\">Stacked bar chart</h3>\n      {/* REF: https://stackoverflow.com/questions/31022421/google-visualization-stacked-bar-chart-colors-and-labels-for-each-value */}\n      <div style={{ border: '1px solid #b9b9b9', padding: '5px' }}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"BarChart\"\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '500px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Country', 'Digital Display', 'Facebook', 'Instagram', 'YouTube', { role: 'annotation' }],\n            ['Sri Lanka', 280000, 190000, 290000, 300000, 'hello'],\n            ['India', 160000, 220000, 230000, 300000, 'world'],\n            ['Vietnam', 70000, 200000, 150000, 200000, 'this'],\n            ['Malaysia', 50000, 150000, 100000, 180000, 'is'],\n            ['Indonesia', 40000, 100000, 80000, 100000, 'annotation'],\n          ]}\n          options={{\n            title: 'Impressions',\n            // REF: https://stackoverflow.com/questions/37176219/how-to-change-google-chart-title-font-size\n            titleTextStyle: {\n              bold: true,\n              color: '#2c313a',\n              fontName: 'Open Sans',\n              fontSize: 36, // 12, 18 whatever you want (don't specify px)\n              italic: false,\n            },\n            legend: {\n              position: 'bottom',\n              maxLines: 3,\n              textStyle: { color: '#9b9b9b', fontSize: 12 },\n              fontName: 'Open Sans',\n            },\n            bar: { groupWidth: '75%' },\n            isStacked: true,\n            focusTarget: 'category',\n            series: {\n              0: { color: '#92bef9' },\n              1: { color: '#5e98e6' },\n              2: { color: '#3b70b7' },\n              3: { color: '#344776' },\n            },\n            hAxis: {\n              baselineColor: '#d8d8d8',\n              format: 'short',\n              title: '',\n              textStyle: { color: '#2c313a', fontSize: 16, fontName: 'Open Sans' },\n            },\n            vAxis: {\n              format: 'short',\n              title: '',\n              textStyle: { color: '#2c313a', fontSize: 16, fontName: 'Open Sans' },\n            },\n            animation: {\n              duration: '0.5s',\n              easing: 'inAndOut',\n              // startup: true,\n            },\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      </div>\n      {/* REF: https://stackoverflow.com/questions/29931681/google-combo-charts-with-stacked-bar-and-lines */}\n      <div style={{\n        alignItems: 'center',\n        border: '1px solid #b9b9b9',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '5px',\n      }}>\n        <Chart\n          width={'100%'}\n          height={'325px'}\n          chartType=\"ComboChart\"\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '325px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Month', 'Digital Display', 'Facebook', 'Instagram', 'YouTube', 'Engagement Rate'],\n            ['Aug 26', 165, 938, 614.6, 400, 0.04],\n            ['Sep 2', 135, 1120, 682, 500, 0.05],\n            ['Sep 9', 157, 1167, 623, 600, 0.045],\n            ['Sep 16', 139, 1110, 609.4, 450, 0.035],\n            ['Sep 23', 136, 691, 569.6, 700, 0.03],\n            ['Sep 30', 236, 491, 469.6, 500, 0.02],\n            ['Oct 7', 436, 591, 369.6, 700, 0.015],\n            ['Oct 14', 336, 791, 269.6, 800, 0.025],\n            ['Oct 21', 236, 391, 469.6, 750, 0.02],\n            ['Oct 28', 336, 291, 369.6, 600, 0.015],\n          ]}\n          options={{\n            bar: { groupWidth: '50%' },\n            chartArea: { width: '85%', height: '75%' },\n            focusTarget: 'category',\n            hAxis: { title: '' },\n            vAxis: { baselineColor: '#d8d8d8', fontSize: 16 },\n            isStacked: true,\n            legend: { position: 'bottom', textStyle: { color: '#9b9b9b' } },\n            title: '',\n            pointSize: 4,\n            seriesType: 'bars',\n            series: {\n              0: { targetAxisIndex: 0, color: '#92bef9' },\n              1: { targetAxisIndex: 0, color: '#5e98e6' },\n              2: { targetAxisIndex: 0, color: '#3b70b7' },\n              3: { targetAxisIndex: 0, color: '#344776' },\n              4: { targetAxisIndex: 1, color: '#f7cc6d', type: 'line', curveType: 'function' },\n            },\n            vAxes: {\n              0: { title: '', format: 'short' },\n              1: { title: '', format: 'percent' },\n            },\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      </div>\n      <h3 id=\"pie\">Demo for Pie Chart</h3>\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n        <button type=\"button\" className=\"btn btn-secondary\"\n                onClick={() => handle3dModeChange(false)}>2D\n        </button>\n        <button type=\"button\" className=\"btn btn-secondary\"\n                onClick={() => handle3dModeChange(true)}>3D\n        </button>\n      </div>\n      <div style={{ border: '1px solid #b9b9b9', padding: '5px' }}>\n        <Chart\n          width={'100%'}\n          height={'500px'}\n          chartType=\"PieChart\"\n          loader={<div style={{\n            alignItems: 'center',\n            background: '#cccccc',\n            display: 'flex',\n            height: '500px',\n            justifyContent: 'center',\n            width: '100%',\n          }}><i className=\"fas fa-5x fa-circle-notch fa-spin\"/></div>}\n          data={[\n            ['Platform', 'Total Clicks', { role: 'annotation' }],\n            ['PFX', 54500, 'hello'],\n            ['Facebook', 45500, 'moto'],\n          ]}\n          options={{\n            // title: 'CTR To Website',\n            // backgroundColor: '#dddddd',\n            chartArea: {\n              height: '90%',\n              width: '90%',\n            },\n            legend: 'none',\n            pieSliceText: 'none',\n            slices: {\n              0: { color: '#51a4f8' },\n              1: { color: '#f7cc6d' },\n            },\n            tooltip: { trigger: 'none' },\n            is3D: is3dMode,\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}